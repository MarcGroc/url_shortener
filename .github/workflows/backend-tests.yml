name: backend-test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:7.0.0-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"


      - name: cache poetry install
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1.4.2

      - uses: snok/install-poetry@v1
        with:
          version: 1.4.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        working-directory: .
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction
        working-directory: .

      - name: make migrations
        working-directory: .
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: 'True'
          ALLOWED_HOSTS: '*'
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: '0.0.0.0'
          DB_PORT: '5432'
          CELERY_BROKER_URL: redis://0.0.0.0:6379/0
          CELERY_RESULT_BACKEND: redis://0.0.0.0:6379/0
          SUPERUSER_USERNAME: admin
          SUPERUSER_PASSWORD: admin1234
          SUPERUSER_EMAIL: q@q.com
        run: poetry run python manage.py makemigrations  && 
          poetry run python manage.py migrate

      - name: run tests
        working-directory: .
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: 'True'
          ALLOWED_HOSTS: '*'
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: '0.0.0.0'
          DB_PORT: '5432'
          DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
          CELERY_BROKER_URL: redis://0.0.0.0:6379/0
          CELERY_RESULT_BACKEND: redis://0.0.0.0:6379/0
          SUPERUSER_USERNAME: admin
          SUPERUSER_PASSWORD: admin1234
          SUPERUSER_EMAIL: q@q.com
        run: poetry run python manage.py test --verbosity=2
        timeout-minutes: 5
